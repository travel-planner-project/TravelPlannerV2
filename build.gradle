plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.travelplanner'
version = 'dev-SPRINT1'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.hibernate.validator:hibernate-validator:7.0.1.Final'
	implementation 'javax.servlet:javax.servlet-api:4.0.1'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// 웹소켓
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.webjars:sockjs-client:1.5.1'
	implementation 'org.webjars:stomp-websocket:2.3.4'
	implementation 'org.springframework:spring-messaging:6.0.3'
	implementation 'org.springframework.security:spring-security-messaging:6.0.2'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'mysql:mysql-connector-java:8.0.23'
	implementation 'org.hibernate.validator:hibernate-validator'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// aws s3
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.281'
	implementation 'software.amazon.awssdk:s3:2.17.52'

	// oauth
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'io.lettuce:lettuce-core'

	// mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'
}

tasks.named('test') {
	useJUnitPlatform()
}

jar {
	enabled = false
}

test {
	exclude '*/'
}

// 빌드 시 application.yml 을 서브모듈에서 복사하기
task copySubmoduleYml(type: Copy) {
	from './dev-submodule'
	include '*.yml'
	into './src/main/resources'
}

// build 태스크가 copySubmoduleYml 태스크에 의존하도록 설정
processResources.dependsOn copySubmoduleYml